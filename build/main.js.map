{"version":3,"file":"main.js","sourceRoot":"/","sources":["main.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * ioBroker ODL adapter.\n *\n * (C) 2019-2021 Peter MÃ¼ller <peter@crycode.de> (https://github.com/crycode-de/ioBroker.odl)\n */\n\nimport * as utils from '@iobroker/adapter-core';\n\nimport * as request from 'request';\n\n/**\n * The ODL adapter.\n */\nclass OdlAdapter extends utils.Adapter {\n\n  private readonly url: string = 'https://www.imis.bfs.de/ogc/opendata/ows?&service=WFS&version=1.1.0&request=GetFeature&typeName=opendata%3Aodl_brutto_1h_timeseries&outputFormat=application%2Fjson&filter=#filter#&sortBy=end_measure&viewparams=locality_code%3A#localityCode#%3B';\n\n  private readonly filterTpl: string = '<Filter xmlns=\"http://www.opengis.net/ogc\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:gml=\"http://www.opengis.net/gml\"><And><PropertyIsBetween><PropertyName>end_measure</PropertyName><LowerBoundary><Literal>#from#</Literal></LowerBoundary><UpperBoundary><Literal>#to#</Literal></UpperBoundary></PropertyIsBetween><Or><ogc:PropertyIsEqualTo><ogc:PropertyName>source</ogc:PropertyName><ogc:Literal>BfS</ogc:Literal></ogc:PropertyIsEqualTo></Or></And></Filter>';\n\n  private exitTimeout: NodeJS.Timeout | null = null;\n\n  /**\n   * Constructor to create a new instance of the adapter.\n   * @param options The adapter options.\n   */\n  constructor(options: Partial<utils.AdapterOptions> = {}) {\n    super({\n      ...options,\n      name: 'odl',\n    });\n\n    this.on('ready', () => this.onReady());\n\n    this.exitTimeout = setTimeout(() => {\n      // this.log may be undefined if the adapter could not connect to states/objects db\n      if (this.log) {\n        this.log.warn(`Adapter did not exit within 10 minutes. Will now terminate!`);\n      }\n      this.exit(utils.EXIT_CODES.ADAPTER_REQUESTED_TERMINATION);\n    }, 600000); // 10 minutes\n  }\n\n  /**\n   * Is called when databases are connected and adapter received configuration.\n   */\n  private async onReady(): Promise<void> {\n    this.log.debug('start reading data...');\n\n    try {\n      await this.read();\n      this.log.debug('done');\n    } catch (err) {\n      this.log.error(`Error loading data: ${err}`);\n    }\n\n    this.exit(0);\n  }\n\n  /**\n   * Terminate or exit the adapter.\n   * @param code The exit code.\n   */\n  private exit (code: number): void {\n    if (this.exitTimeout) {\n      clearTimeout(this.exitTimeout);\n    }\n\n    this.terminate ? this.terminate(code) : process.exit(code);\n  }\n\n  private async read (): Promise<void> {\n    for (let i = 0; i < this.config.localityCode.length; i++) {\n\n      // load channel and state object info\n      let objChan: ioBroker.ChannelObject | null = await this.getObjectAsync(this.config.localityCode[i]) as ioBroker.ChannelObject | null;\n      let objState: ioBroker.StateObject | null = await this.getObjectAsync(this.config.localityCode[i] + '.odl') as ioBroker.StateObject | null;\n\n      // create channel if not exists or type is not channel to fix creation error from < v1.1.1\n      if (!objChan || objChan.type !== 'channel') {\n        objChan = {\n          _id:`${this.namespace}.${this.config.localityCode[i]}`,\n          type: 'channel',\n          common: {\n            name: this.config.localityCode[i]\n          },\n          native: {}\n        };\n        await this.setObjectAsync(this.config.localityCode[i], objChan);\n        this.log.debug(`created channel ${objChan._id}`);\n      }\n\n      // create state object if not exists\n      if (!objState) {\n        objState = {\n          _id: `${this.namespace}.${this.config.localityCode[i]}.odl`,\n          type: 'state',\n          common: {\n            name: 'ODL ' + this.config.localityCode[i],\n            role: 'value',\n            type: 'number',\n            unit: 'ÂµSv/h',\n            read: true,\n            write: false\n          },\n          native: {}\n        };\n        await this.setObjectAsync(`${this.config.localityCode[i]}.odl`, objState);\n        this.log.debug(`created state ${objState._id}`);\n\n      // update existing object if type is not state to fix creation error from < v1.1.1\n      } else if (objState.type !== 'state') {\n        await this.extendObjectAsync(`${this.config.localityCode[i]}.odl`, {\n          type: 'state',\n          common: {\n            role: 'value',\n            type: 'number',\n            unit: 'ÂµSv/h',\n            read: true,\n            write: false\n          }\n        });\n        this.log.debug(`updated state ${objState._id}`);\n      }\n\n      await this.readLocality(this.config.localityCode[i], objChan, objState);\n    }\n  }\n\n  private async readLocality (loc: string, objChan: ioBroker.ChannelObject, objState: ioBroker.StateObject): Promise<void> {\n    const odlStateId = loc + '.odl';\n\n    const to = new Date();\n    to.setMinutes(0);\n    to.setSeconds(0);\n    to.setMilliseconds(0);\n\n    const from = new Date(to);\n    from.setHours(from.getHours() - this.config.pastHours || 48);\n\n    // create request url\n    const filter = this.filterTpl.replace('#from#', from.toISOString()).replace('#to#', to.toISOString());\n    const url = this.url.replace('#localityCode#', encodeURIComponent(loc)).replace('#filter#', encodeURIComponent(filter));\n\n    this.log.debug(`url for ${loc}: ${url}`);\n\n    // load data\n    const featureCollection: FeatureCollection | null = await new Promise ((resolve) => {\n      request({\n        url,\n        timeout: (this.config.timeout || 30) * 1000,\n        headers: {\n          'User-Agent': `Mozilla/5.0 (compatible; ioBroker.odl/${this.version})`\n        }\n      }, (err, res, body: string) => {\n        if (err) {\n          this.log.warn('Error loadind data from server!');\n          this.log.warn(err);\n          return resolve(null);\n        }\n        this.log.debug(`got ${body.length} bytes for ${loc}, http status ${res.statusCode}`);\n        if (res.statusCode !== 200) {\n          this.log.warn('Error loadind data from server!');\n          this.log.warn(`HTTP status ${res.statusCode} ${res.statusMessage}`);\n          this.log.debug(body);\n          return resolve(null);\n        }\n\n        try {\n          resolve(JSON.parse(body));\n        } catch (e: any) {\n          this.log.warn('Error parsing response from server!');\n          this.log.warn(e);\n          this.log.debug(body);\n          resolve(null);\n        }\n      });\n    });\n\n    // check if we got data\n    if (!featureCollection || !Array.isArray(featureCollection.features)) {\n      this.log.warn(`Got no data for ${loc}`);\n      return;\n    }\n\n    this.log.debug(`data contains ${featureCollection.features.length} features for ${loc}`);\n\n    // get the last feature (current value) from the feature collection\n    const lastFeature = featureCollection.features[featureCollection.features.length - 1];\n\n    // if no last feature, there are no features and thus nothing to do\n    if (!lastFeature) {\n      this.log.warn(`Got no data for ${loc}`);\n      return;\n    }\n\n    this.log.debug(`last value for ${loc} (${lastFeature.properties.locality_name}): ${lastFeature.properties.value}@${lastFeature.properties.end_measure}`);\n\n    // update object name if this is not the name of the last feature\n    if (objChan.common.name !== lastFeature.properties.locality_name) {\n      this.log.debug(`update name for ${loc} (${lastFeature.properties.locality_name})`);\n\n      await this.extendObjectAsync(loc, {\n        common: {\n          name: lastFeature.properties.locality_name\n        }\n      });\n\n      await this.extendObjectAsync(odlStateId, {\n        common: {\n          name: 'ODL ' + lastFeature.properties.locality_name\n        }\n      });\n    }\n\n    // set the current state to the value of the last feature if the value or the feature changed\n    const newState: ioBroker.SettableState = {\n      val: lastFeature.properties.value,\n      ack: true,\n      ts: new Date(lastFeature.properties.end_measure).getTime(),\n      lc: Date.now()\n    };\n    const currentState = await this.getStateAsync(odlStateId);\n\n    if (!currentState || currentState.val !== (newState as ioBroker.State).val || currentState.ts !== (newState as ioBroker.State).ts) {\n      await this.setStateAsync(odlStateId, newState);\n    }\n\n    // add older features to each enabled history instance if they are not already present\n    for (const historyKey in objState.common.custom) {\n      // check if history is found and enabled\n      if (historyKey.match(/^(history|influxdb|sql)\\.\\d+$/) && objState.common.custom[historyKey].enabled === true) {\n        // history instance found and enabled\n        this.log.debug(`history adapter ${historyKey} found for ${loc}`);\n\n        // load current history in the given time range\n        const getHistoryResult: GetHistoryResult = await this.sendToAsync(historyKey, 'getHistory', {\n          id: objState._id,\n          options: {\n            start: from.getTime(),\n            end: to.getTime(),\n            ack: true,\n            aggregate: 'none'\n          }\n        });\n        const currentHistory: ioBroker.State[] = (getHistoryResult && Array.isArray(getHistoryResult.result)) ? getHistoryResult.result : [];\n\n        const newHistory: Partial<ioBroker.State>[] = [];\n\n        // check each feature if it must be added to history\n        featureCollection.features.forEach((feature) => {\n          const endMeasure = new Date(feature.properties.end_measure).getTime();\n          if (feature.properties.end_measure === lastFeature.properties.end_measure\n            || currentHistory.find((state) => (state.ts === endMeasure))) return;\n\n          this.log.debug(`adding ${feature.properties.value}@${feature.properties.end_measure} for ${loc} to ${historyKey}`);\n          newHistory.push({\n            ts: endMeasure,\n            val: feature.properties.value,\n            ack: true,\n            from: 'system.adapter.' + this.namespace,\n            q: 0\n          });\n        });\n\n        // add sates to history\n        if (newHistory.length > 0) {\n          await this.sendToAsync(historyKey, 'storeState', {\n            id: objState._id,\n            state: newHistory\n          });\n        }\n      }\n    }\n  }\n}\n\nif (module.parent) {\n  // Export the constructor in compact mode\n  module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new OdlAdapter(options);\n} else {\n  // otherwise start the instance directly\n  (() => new OdlAdapter())();\n}\n"]}