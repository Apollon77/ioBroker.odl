{
  "version": 3,
  "sources": ["../../src/lib/tools-dev.ts"],
  "sourcesContent": ["import axios from 'axios';\n\n/**\n * Tests whether the given variable is really an Array\n * @param it The variable to test\n */\nexport function isArray(it: unknown): it is any[] {\n  if (Array.isArray != null) return Array.isArray(it);\n  return Object.prototype.toString.call(it) === '[object Array]';\n}\n\n/**\n * Translates text using the Google Translate API\n * @param text The text to translate\n * @param targetLang The target languate\n */\nexport async function translateText(text: string, targetLang: string): Promise<string> {\n  if (targetLang === 'en') return text;\n  try {\n    const url = `http://translate.googleapis.com/translate_a/single?client=gtx&sl=en&tl=${targetLang}&dt=t&q=${encodeURIComponent(text)}&ie=UTF-8&oe=UTF-8`;\n    const response = await axios({url, timeout: 5000});\n    if (isArray(response.data)) {\n      // we got a valid response\n      return response.data[0][0][0];\n    }\n    throw new Error('Invalid response for translate request');\n  } catch (e) {\n    throw new Error(`Could not translate to \"${targetLang}\": ${e}`);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAMX,iBAAiB,IAA0B;AAChD,MAAI,MAAM,WAAW;AAAM,WAAO,MAAM,QAAQ,EAAE;AAClD,SAAO,OAAO,UAAU,SAAS,KAAK,EAAE,MAAM;AAChD;AAOA,6BAAoC,MAAc,YAAqC;AACrF,MAAI,eAAe;AAAM,WAAO;AAChC,MAAI;AACF,UAAM,MAAM,0EAA0E,qBAAqB,mBAAmB,IAAI;AAClI,UAAM,WAAW,MAAM,0BAAM,EAAC,KAAK,SAAS,IAAI,CAAC;AACjD,QAAI,QAAQ,SAAS,IAAI,GAAG;AAE1B,aAAO,SAAS,KAAK,GAAG,GAAG;AAAA,IAC7B;AACA,UAAM,IAAI,MAAM,wCAAwC;AAAA,EAC1D,SAAS,GAAP;AACA,UAAM,IAAI,MAAM,2BAA2B,gBAAgB,GAAG;AAAA,EAChE;AACF;",
  "names": []
}
